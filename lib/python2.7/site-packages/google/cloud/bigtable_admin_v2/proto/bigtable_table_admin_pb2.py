# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/bigtable/admin_v2/proto/bigtable_table_admin.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.cloud.bigtable_admin_v2.proto import table_pb2 as google_dot_cloud_dot_bigtable_dot_admin__v2_dot_proto_dot_table__pb2
from google.longrunning import operations_pb2 as google_dot_longrunning_dot_operations__pb2
from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='google/cloud/bigtable/admin_v2/proto/bigtable_table_admin.proto',
  package='google.bigtable.admin.v2',
  syntax='proto3',
  serialized_pb=_b('\n?google/cloud/bigtable/admin_v2/proto/bigtable_table_admin.proto\x12\x18google.bigtable.admin.v2\x1a\x1cgoogle/api/annotations.proto\x1a\x30google/cloud/bigtable/admin_v2/proto/table.proto\x1a#google/longrunning/operations.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc8\x01\n\x12\x43reateTableRequest\x12\x0e\n\x06parent\x18\x01 \x01(\t\x12\x10\n\x08table_id\x18\x02 \x01(\t\x12.\n\x05table\x18\x03 \x01(\x0b\x32\x1f.google.bigtable.admin.v2.Table\x12J\n\x0einitial_splits\x18\x04 \x03(\x0b\x32\x32.google.bigtable.admin.v2.CreateTableRequest.Split\x1a\x14\n\x05Split\x12\x0b\n\x03key\x18\x01 \x01(\x0c\"[\n\x1e\x43reateTableFromSnapshotRequest\x12\x0e\n\x06parent\x18\x01 \x01(\t\x12\x10\n\x08table_id\x18\x02 \x01(\t\x12\x17\n\x0fsource_snapshot\x18\x03 \x01(\t\"m\n\x13\x44ropRowRangeRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x18\n\x0erow_key_prefix\x18\x02 \x01(\x0cH\x00\x12$\n\x1a\x64\x65lete_all_data_from_table\x18\x03 \x01(\x08H\x00\x42\x08\n\x06target\"~\n\x11ListTablesRequest\x12\x0e\n\x06parent\x18\x01 \x01(\t\x12\x32\n\x04view\x18\x02 \x01(\x0e\x32$.google.bigtable.admin.v2.Table.View\x12\x11\n\tpage_size\x18\x04 \x01(\x05\x12\x12\n\npage_token\x18\x03 \x01(\t\"^\n\x12ListTablesResponse\x12/\n\x06tables\x18\x01 \x03(\x0b\x32\x1f.google.bigtable.admin.v2.Table\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"S\n\x0fGetTableRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x32\n\x04view\x18\x02 \x01(\x0e\x32$.google.bigtable.admin.v2.Table.View\"\"\n\x12\x44\x65leteTableRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"\xae\x02\n\x1bModifyColumnFamiliesRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12Y\n\rmodifications\x18\x02 \x03(\x0b\x32\x42.google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification\x1a\xa5\x01\n\x0cModification\x12\n\n\x02id\x18\x01 \x01(\t\x12\x38\n\x06\x63reate\x18\x02 \x01(\x0b\x32&.google.bigtable.admin.v2.ColumnFamilyH\x00\x12\x38\n\x06update\x18\x03 \x01(\x0b\x32&.google.bigtable.admin.v2.ColumnFamilyH\x00\x12\x0e\n\x04\x64rop\x18\x04 \x01(\x08H\x00\x42\x05\n\x03mod\"/\n\x1fGenerateConsistencyTokenRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"=\n GenerateConsistencyTokenResponse\x12\x19\n\x11\x63onsistency_token\x18\x01 \x01(\t\"B\n\x17\x43heckConsistencyRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x19\n\x11\x63onsistency_token\x18\x02 \x01(\t\".\n\x18\x43heckConsistencyResponse\x12\x12\n\nconsistent\x18\x01 \x01(\x08\"\x87\x01\n\x14SnapshotTableRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07\x63luster\x18\x02 \x01(\t\x12\x13\n\x0bsnapshot_id\x18\x03 \x01(\t\x12&\n\x03ttl\x18\x04 \x01(\x0b\x32\x19.google.protobuf.Duration\x12\x13\n\x0b\x64\x65scription\x18\x05 \x01(\t\"\"\n\x12GetSnapshotRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"M\n\x14ListSnapshotsRequest\x12\x0e\n\x06parent\x18\x01 \x01(\t\x12\x11\n\tpage_size\x18\x02 \x01(\x05\x12\x12\n\npage_token\x18\x03 \x01(\t\"g\n\x15ListSnapshotsResponse\x12\x35\n\tsnapshots\x18\x01 \x03(\x0b\x32\".google.bigtable.admin.v2.Snapshot\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"%\n\x15\x44\x65leteSnapshotRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\"\xc4\x01\n\x15SnapshotTableMetadata\x12H\n\x10original_request\x18\x01 \x01(\x0b\x32..google.bigtable.admin.v2.SnapshotTableRequest\x12\x30\n\x0crequest_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\x0b\x66inish_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\xd8\x01\n\x1f\x43reateTableFromSnapshotMetadata\x12R\n\x10original_request\x18\x01 \x01(\x0b\x32\x38.google.bigtable.admin.v2.CreateTableFromSnapshotRequest\x12\x30\n\x0crequest_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\x0b\x66inish_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp2\xb7\x11\n\x12\x42igtableTableAdmin\x12\x93\x01\n\x0b\x43reateTable\x12,.google.bigtable.admin.v2.CreateTableRequest\x1a\x1f.google.bigtable.admin.v2.Table\"5\x82\xd3\xe4\x93\x02/\"*/v2/{parent=projects/*/instances/*}/tables:\x01*\x12\xbc\x01\n\x17\x43reateTableFromSnapshot\x12\x38.google.bigtable.admin.v2.CreateTableFromSnapshotRequest\x1a\x1d.google.longrunning.Operation\"H\x82\xd3\xe4\x93\x02\x42\"=/v2/{parent=projects/*/instances/*}/tables:createFromSnapshot:\x01*\x12\x9b\x01\n\nListTables\x12+.google.bigtable.admin.v2.ListTablesRequest\x1a,.google.bigtable.admin.v2.ListTablesResponse\"2\x82\xd3\xe4\x93\x02,\x12*/v2/{parent=projects/*/instances/*}/tables\x12\x8a\x01\n\x08GetTable\x12).google.bigtable.admin.v2.GetTableRequest\x1a\x1f.google.bigtable.admin.v2.Table\"2\x82\xd3\xe4\x93\x02,\x12*/v2/{name=projects/*/instances/*/tables/*}\x12\x87\x01\n\x0b\x44\x65leteTable\x12,.google.bigtable.admin.v2.DeleteTableRequest\x1a\x16.google.protobuf.Empty\"2\x82\xd3\xe4\x93\x02,**/v2/{name=projects/*/instances/*/tables/*}\x12\xba\x01\n\x14ModifyColumnFamilies\x12\x35.google.bigtable.admin.v2.ModifyColumnFamiliesRequest\x1a\x1f.google.bigtable.admin.v2.Table\"J\x82\xd3\xe4\x93\x02\x44\"?/v2/{name=projects/*/instances/*/tables/*}:modifyColumnFamilies:\x01*\x12\x99\x01\n\x0c\x44ropRowRange\x12-.google.bigtable.admin.v2.DropRowRangeRequest\x1a\x16.google.protobuf.Empty\"B\x82\xd3\xe4\x93\x02<\"7/v2/{name=projects/*/instances/*/tables/*}:dropRowRange:\x01*\x12\xe1\x01\n\x18GenerateConsistencyToken\x12\x39.google.bigtable.admin.v2.GenerateConsistencyTokenRequest\x1a:.google.bigtable.admin.v2.GenerateConsistencyTokenResponse\"N\x82\xd3\xe4\x93\x02H\"C/v2/{name=projects/*/instances/*/tables/*}:generateConsistencyToken:\x01*\x12\xc1\x01\n\x10\x43heckConsistency\x12\x31.google.bigtable.admin.v2.CheckConsistencyRequest\x1a\x32.google.bigtable.admin.v2.CheckConsistencyResponse\"F\x82\xd3\xe4\x93\x02@\";/v2/{name=projects/*/instances/*/tables/*}:checkConsistency:\x01*\x12\x9e\x01\n\rSnapshotTable\x12..google.bigtable.admin.v2.SnapshotTableRequest\x1a\x1d.google.longrunning.Operation\">\x82\xd3\xe4\x93\x02\x38\"3/v2/{name=projects/*/instances/*/tables/*}:snapshot:\x01*\x12\xa1\x01\n\x0bGetSnapshot\x12,.google.bigtable.admin.v2.GetSnapshotRequest\x1a\".google.bigtable.admin.v2.Snapshot\"@\x82\xd3\xe4\x93\x02:\x12\x38/v2/{name=projects/*/instances/*/clusters/*/snapshots/*}\x12\xb2\x01\n\rListSnapshots\x12..google.bigtable.admin.v2.ListSnapshotsRequest\x1a/.google.bigtable.admin.v2.ListSnapshotsResponse\"@\x82\xd3\xe4\x93\x02:\x12\x38/v2/{parent=projects/*/instances/*/clusters/*}/snapshots\x12\x9b\x01\n\x0e\x44\x65leteSnapshot\x12/.google.bigtable.admin.v2.DeleteSnapshotRequest\x1a\x16.google.protobuf.Empty\"@\x82\xd3\xe4\x93\x02:*8/v2/{name=projects/*/instances/*/clusters/*/snapshots/*}B\xba\x01\n\x1c\x63om.google.bigtable.admin.v2B\x17\x42igtableTableAdminProtoP\x01Z=google.golang.org/genproto/googleapis/bigtable/admin/v2;admin\xaa\x02\x1eGoogle.Cloud.Bigtable.Admin.V2\xca\x02\x1eGoogle\\Cloud\\Bigtable\\Admin\\V2b\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,google_dot_cloud_dot_bigtable_dot_admin__v2_dot_proto_dot_table__pb2.DESCRIPTOR,google_dot_longrunning_dot_operations__pb2.DESCRIPTOR,google_dot_protobuf_dot_duration__pb2.DESCRIPTOR,google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,])




_CREATETABLEREQUEST_SPLIT = _descriptor.Descriptor(
  name='Split',
  full_name='google.bigtable.admin.v2.CreateTableRequest.Split',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='google.bigtable.admin.v2.CreateTableRequest.Split.key', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=485,
  serialized_end=505,
)

_CREATETABLEREQUEST = _descriptor.Descriptor(
  name='CreateTableRequest',
  full_name='google.bigtable.admin.v2.CreateTableRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parent', full_name='google.bigtable.admin.v2.CreateTableRequest.parent', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='table_id', full_name='google.bigtable.admin.v2.CreateTableRequest.table_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='table', full_name='google.bigtable.admin.v2.CreateTableRequest.table', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='initial_splits', full_name='google.bigtable.admin.v2.CreateTableRequest.initial_splits', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CREATETABLEREQUEST_SPLIT, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=305,
  serialized_end=505,
)


_CREATETABLEFROMSNAPSHOTREQUEST = _descriptor.Descriptor(
  name='CreateTableFromSnapshotRequest',
  full_name='google.bigtable.admin.v2.CreateTableFromSnapshotRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parent', full_name='google.bigtable.admin.v2.CreateTableFromSnapshotRequest.parent', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='table_id', full_name='google.bigtable.admin.v2.CreateTableFromSnapshotRequest.table_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_snapshot', full_name='google.bigtable.admin.v2.CreateTableFromSnapshotRequest.source_snapshot', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=507,
  serialized_end=598,
)


_DROPROWRANGEREQUEST = _descriptor.Descriptor(
  name='DropRowRangeRequest',
  full_name='google.bigtable.admin.v2.DropRowRangeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.bigtable.admin.v2.DropRowRangeRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='row_key_prefix', full_name='google.bigtable.admin.v2.DropRowRangeRequest.row_key_prefix', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='delete_all_data_from_table', full_name='google.bigtable.admin.v2.DropRowRangeRequest.delete_all_data_from_table', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='target', full_name='google.bigtable.admin.v2.DropRowRangeRequest.target',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=600,
  serialized_end=709,
)


_LISTTABLESREQUEST = _descriptor.Descriptor(
  name='ListTablesRequest',
  full_name='google.bigtable.admin.v2.ListTablesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parent', full_name='google.bigtable.admin.v2.ListTablesRequest.parent', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='view', full_name='google.bigtable.admin.v2.ListTablesRequest.view', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='page_size', full_name='google.bigtable.admin.v2.ListTablesRequest.page_size', index=2,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='page_token', full_name='google.bigtable.admin.v2.ListTablesRequest.page_token', index=3,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=711,
  serialized_end=837,
)


_LISTTABLESRESPONSE = _descriptor.Descriptor(
  name='ListTablesResponse',
  full_name='google.bigtable.admin.v2.ListTablesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tables', full_name='google.bigtable.admin.v2.ListTablesResponse.tables', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='google.bigtable.admin.v2.ListTablesResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=839,
  serialized_end=933,
)


_GETTABLEREQUEST = _descriptor.Descriptor(
  name='GetTableRequest',
  full_name='google.bigtable.admin.v2.GetTableRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.bigtable.admin.v2.GetTableRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='view', full_name='google.bigtable.admin.v2.GetTableRequest.view', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=935,
  serialized_end=1018,
)


_DELETETABLEREQUEST = _descriptor.Descriptor(
  name='DeleteTableRequest',
  full_name='google.bigtable.admin.v2.DeleteTableRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.bigtable.admin.v2.DeleteTableRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1020,
  serialized_end=1054,
)


_MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION = _descriptor.Descriptor(
  name='Modification',
  full_name='google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='create', full_name='google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.create', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='update', full_name='google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.update', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='drop', full_name='google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.drop', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='mod', full_name='google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification.mod',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1194,
  serialized_end=1359,
)

_MODIFYCOLUMNFAMILIESREQUEST = _descriptor.Descriptor(
  name='ModifyColumnFamiliesRequest',
  full_name='google.bigtable.admin.v2.ModifyColumnFamiliesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.bigtable.admin.v2.ModifyColumnFamiliesRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='modifications', full_name='google.bigtable.admin.v2.ModifyColumnFamiliesRequest.modifications', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1057,
  serialized_end=1359,
)


_GENERATECONSISTENCYTOKENREQUEST = _descriptor.Descriptor(
  name='GenerateConsistencyTokenRequest',
  full_name='google.bigtable.admin.v2.GenerateConsistencyTokenRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.bigtable.admin.v2.GenerateConsistencyTokenRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1361,
  serialized_end=1408,
)


_GENERATECONSISTENCYTOKENRESPONSE = _descriptor.Descriptor(
  name='GenerateConsistencyTokenResponse',
  full_name='google.bigtable.admin.v2.GenerateConsistencyTokenResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='consistency_token', full_name='google.bigtable.admin.v2.GenerateConsistencyTokenResponse.consistency_token', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1410,
  serialized_end=1471,
)


_CHECKCONSISTENCYREQUEST = _descriptor.Descriptor(
  name='CheckConsistencyRequest',
  full_name='google.bigtable.admin.v2.CheckConsistencyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.bigtable.admin.v2.CheckConsistencyRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='consistency_token', full_name='google.bigtable.admin.v2.CheckConsistencyRequest.consistency_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1473,
  serialized_end=1539,
)


_CHECKCONSISTENCYRESPONSE = _descriptor.Descriptor(
  name='CheckConsistencyResponse',
  full_name='google.bigtable.admin.v2.CheckConsistencyResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='consistent', full_name='google.bigtable.admin.v2.CheckConsistencyResponse.consistent', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1541,
  serialized_end=1587,
)


_SNAPSHOTTABLEREQUEST = _descriptor.Descriptor(
  name='SnapshotTableRequest',
  full_name='google.bigtable.admin.v2.SnapshotTableRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.bigtable.admin.v2.SnapshotTableRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cluster', full_name='google.bigtable.admin.v2.SnapshotTableRequest.cluster', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='snapshot_id', full_name='google.bigtable.admin.v2.SnapshotTableRequest.snapshot_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ttl', full_name='google.bigtable.admin.v2.SnapshotTableRequest.ttl', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='description', full_name='google.bigtable.admin.v2.SnapshotTableRequest.description', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1590,
  serialized_end=1725,
)


_GETSNAPSHOTREQUEST = _descriptor.Descriptor(
  name='GetSnapshotRequest',
  full_name='google.bigtable.admin.v2.GetSnapshotRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.bigtable.admin.v2.GetSnapshotRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1727,
  serialized_end=1761,
)


_LISTSNAPSHOTSREQUEST = _descriptor.Descriptor(
  name='ListSnapshotsRequest',
  full_name='google.bigtable.admin.v2.ListSnapshotsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='parent', full_name='google.bigtable.admin.v2.ListSnapshotsRequest.parent', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='page_size', full_name='google.bigtable.admin.v2.ListSnapshotsRequest.page_size', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='page_token', full_name='google.bigtable.admin.v2.ListSnapshotsRequest.page_token', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1763,
  serialized_end=1840,
)


_LISTSNAPSHOTSRESPONSE = _descriptor.Descriptor(
  name='ListSnapshotsResponse',
  full_name='google.bigtable.admin.v2.ListSnapshotsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='snapshots', full_name='google.bigtable.admin.v2.ListSnapshotsResponse.snapshots', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='next_page_token', full_name='google.bigtable.admin.v2.ListSnapshotsResponse.next_page_token', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1842,
  serialized_end=1945,
)


_DELETESNAPSHOTREQUEST = _descriptor.Descriptor(
  name='DeleteSnapshotRequest',
  full_name='google.bigtable.admin.v2.DeleteSnapshotRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='google.bigtable.admin.v2.DeleteSnapshotRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1947,
  serialized_end=1984,
)


_SNAPSHOTTABLEMETADATA = _descriptor.Descriptor(
  name='SnapshotTableMetadata',
  full_name='google.bigtable.admin.v2.SnapshotTableMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='original_request', full_name='google.bigtable.admin.v2.SnapshotTableMetadata.original_request', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='request_time', full_name='google.bigtable.admin.v2.SnapshotTableMetadata.request_time', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='finish_time', full_name='google.bigtable.admin.v2.SnapshotTableMetadata.finish_time', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1987,
  serialized_end=2183,
)


_CREATETABLEFROMSNAPSHOTMETADATA = _descriptor.Descriptor(
  name='CreateTableFromSnapshotMetadata',
  full_name='google.bigtable.admin.v2.CreateTableFromSnapshotMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='original_request', full_name='google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.original_request', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='request_time', full_name='google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.request_time', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='finish_time', full_name='google.bigtable.admin.v2.CreateTableFromSnapshotMetadata.finish_time', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2186,
  serialized_end=2402,
)

_CREATETABLEREQUEST_SPLIT.containing_type = _CREATETABLEREQUEST
_CREATETABLEREQUEST.fields_by_name['table'].message_type = google_dot_cloud_dot_bigtable_dot_admin__v2_dot_proto_dot_table__pb2._TABLE
_CREATETABLEREQUEST.fields_by_name['initial_splits'].message_type = _CREATETABLEREQUEST_SPLIT
_DROPROWRANGEREQUEST.oneofs_by_name['target'].fields.append(
  _DROPROWRANGEREQUEST.fields_by_name['row_key_prefix'])
_DROPROWRANGEREQUEST.fields_by_name['row_key_prefix'].containing_oneof = _DROPROWRANGEREQUEST.oneofs_by_name['target']
_DROPROWRANGEREQUEST.oneofs_by_name['target'].fields.append(
  _DROPROWRANGEREQUEST.fields_by_name['delete_all_data_from_table'])
_DROPROWRANGEREQUEST.fields_by_name['delete_all_data_from_table'].containing_oneof = _DROPROWRANGEREQUEST.oneofs_by_name['target']
_LISTTABLESREQUEST.fields_by_name['view'].enum_type = google_dot_cloud_dot_bigtable_dot_admin__v2_dot_proto_dot_table__pb2._TABLE_VIEW
_LISTTABLESRESPONSE.fields_by_name['tables'].message_type = google_dot_cloud_dot_bigtable_dot_admin__v2_dot_proto_dot_table__pb2._TABLE
_GETTABLEREQUEST.fields_by_name['view'].enum_type = google_dot_cloud_dot_bigtable_dot_admin__v2_dot_proto_dot_table__pb2._TABLE_VIEW
_MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION.fields_by_name['create'].message_type = google_dot_cloud_dot_bigtable_dot_admin__v2_dot_proto_dot_table__pb2._COLUMNFAMILY
_MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION.fields_by_name['update'].message_type = google_dot_cloud_dot_bigtable_dot_admin__v2_dot_proto_dot_table__pb2._COLUMNFAMILY
_MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION.containing_type = _MODIFYCOLUMNFAMILIESREQUEST
_MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION.oneofs_by_name['mod'].fields.append(
  _MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION.fields_by_name['create'])
_MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION.fields_by_name['create'].containing_oneof = _MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION.oneofs_by_name['mod']
_MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION.oneofs_by_name['mod'].fields.append(
  _MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION.fields_by_name['update'])
_MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION.fields_by_name['update'].containing_oneof = _MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION.oneofs_by_name['mod']
_MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION.oneofs_by_name['mod'].fields.append(
  _MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION.fields_by_name['drop'])
_MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION.fields_by_name['drop'].containing_oneof = _MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION.oneofs_by_name['mod']
_MODIFYCOLUMNFAMILIESREQUEST.fields_by_name['modifications'].message_type = _MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION
_SNAPSHOTTABLEREQUEST.fields_by_name['ttl'].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
_LISTSNAPSHOTSRESPONSE.fields_by_name['snapshots'].message_type = google_dot_cloud_dot_bigtable_dot_admin__v2_dot_proto_dot_table__pb2._SNAPSHOT
_SNAPSHOTTABLEMETADATA.fields_by_name['original_request'].message_type = _SNAPSHOTTABLEREQUEST
_SNAPSHOTTABLEMETADATA.fields_by_name['request_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_SNAPSHOTTABLEMETADATA.fields_by_name['finish_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_CREATETABLEFROMSNAPSHOTMETADATA.fields_by_name['original_request'].message_type = _CREATETABLEFROMSNAPSHOTREQUEST
_CREATETABLEFROMSNAPSHOTMETADATA.fields_by_name['request_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_CREATETABLEFROMSNAPSHOTMETADATA.fields_by_name['finish_time'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
DESCRIPTOR.message_types_by_name['CreateTableRequest'] = _CREATETABLEREQUEST
DESCRIPTOR.message_types_by_name['CreateTableFromSnapshotRequest'] = _CREATETABLEFROMSNAPSHOTREQUEST
DESCRIPTOR.message_types_by_name['DropRowRangeRequest'] = _DROPROWRANGEREQUEST
DESCRIPTOR.message_types_by_name['ListTablesRequest'] = _LISTTABLESREQUEST
DESCRIPTOR.message_types_by_name['ListTablesResponse'] = _LISTTABLESRESPONSE
DESCRIPTOR.message_types_by_name['GetTableRequest'] = _GETTABLEREQUEST
DESCRIPTOR.message_types_by_name['DeleteTableRequest'] = _DELETETABLEREQUEST
DESCRIPTOR.message_types_by_name['ModifyColumnFamiliesRequest'] = _MODIFYCOLUMNFAMILIESREQUEST
DESCRIPTOR.message_types_by_name['GenerateConsistencyTokenRequest'] = _GENERATECONSISTENCYTOKENREQUEST
DESCRIPTOR.message_types_by_name['GenerateConsistencyTokenResponse'] = _GENERATECONSISTENCYTOKENRESPONSE
DESCRIPTOR.message_types_by_name['CheckConsistencyRequest'] = _CHECKCONSISTENCYREQUEST
DESCRIPTOR.message_types_by_name['CheckConsistencyResponse'] = _CHECKCONSISTENCYRESPONSE
DESCRIPTOR.message_types_by_name['SnapshotTableRequest'] = _SNAPSHOTTABLEREQUEST
DESCRIPTOR.message_types_by_name['GetSnapshotRequest'] = _GETSNAPSHOTREQUEST
DESCRIPTOR.message_types_by_name['ListSnapshotsRequest'] = _LISTSNAPSHOTSREQUEST
DESCRIPTOR.message_types_by_name['ListSnapshotsResponse'] = _LISTSNAPSHOTSRESPONSE
DESCRIPTOR.message_types_by_name['DeleteSnapshotRequest'] = _DELETESNAPSHOTREQUEST
DESCRIPTOR.message_types_by_name['SnapshotTableMetadata'] = _SNAPSHOTTABLEMETADATA
DESCRIPTOR.message_types_by_name['CreateTableFromSnapshotMetadata'] = _CREATETABLEFROMSNAPSHOTMETADATA
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CreateTableRequest = _reflection.GeneratedProtocolMessageType('CreateTableRequest', (_message.Message,), dict(

  Split = _reflection.GeneratedProtocolMessageType('Split', (_message.Message,), dict(
    DESCRIPTOR = _CREATETABLEREQUEST_SPLIT,
    __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
    ,
    __doc__ = """An initial split point for a newly created table.
    
    
    Attributes:
        key:
            Row key to use as an initial tablet boundary.
    """,
    # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.CreateTableRequest.Split)
    ))
  ,
  DESCRIPTOR = _CREATETABLEREQUEST,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Request message for
  [google.bigtable.admin.v2.BigtableTableAdmin.CreateTable][google.bigtable.admin.v2.BigtableTableAdmin.CreateTable]
  
  
  Attributes:
      parent:
          The unique name of the instance in which to create the table.
          Values are of the form
          ``projects/<project>/instances/<instance>``.
      table_id:
          The name by which the new table should be referred to within
          the parent instance, e.g., ``foobar`` rather than
          ``<parent>/tables/foobar``.
      table:
          The Table to create.
      initial_splits:
          The optional list of row keys that will be used to initially
          split the table into several tablets (tablets are similar to
          HBase regions). Given two split keys, ``s1`` and ``s2``, three
          tablets will be created, spanning the key ranges: ``[, s1),
          [s1, s2), [s2, )``.  Example:  -  Row keys := ``["a", "apple",
          "custom", "customer_1", "customer_2",``    ``"other", "zz"]``
          -  initial\_split\_keys :=    ``["apple", "customer_1",
          "customer_2", "other"]`` -  Key assignment:     -  Tablet 1
          ``[, apple)                => {"a"}.``    -  Tablet 2
          ``[apple, customer_1)      => {"apple", "custom"}.``    -
          Tablet 3 ``[customer_1, customer_2) => {"customer_1"}.``    -
          Tablet 4 ``[customer_2, other)      => {"customer_2"}.``    -
          Tablet 5 ``[other, )                => {"other", "zz"}.``
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.CreateTableRequest)
  ))
_sym_db.RegisterMessage(CreateTableRequest)
_sym_db.RegisterMessage(CreateTableRequest.Split)

CreateTableFromSnapshotRequest = _reflection.GeneratedProtocolMessageType('CreateTableFromSnapshotRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATETABLEFROMSNAPSHOTREQUEST,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Request message for
  [google.bigtable.admin.v2.BigtableTableAdmin.CreateTableFromSnapshot][google.bigtable.admin.v2.BigtableTableAdmin.CreateTableFromSnapshot]
  
  Note: This is a private alpha release of Cloud Bigtable snapshots. This
  feature is not currently available to most Cloud Bigtable customers.
  This feature might be changed in backward-incompatible ways and is not
  recommended for production use. It is not subject to any SLA or
  deprecation policy.
  
  
  Attributes:
      parent:
          The unique name of the instance in which to create the table.
          Values are of the form
          ``projects/<project>/instances/<instance>``.
      table_id:
          The name by which the new table should be referred to within
          the parent instance, e.g., ``foobar`` rather than
          ``<parent>/tables/foobar``.
      source_snapshot:
          The unique name of the snapshot from which to restore the
          table. The snapshot and the table must be in the same
          instance. Values are of the form ``projects/<project>/instance
          s/<instance>/clusters/<cluster>/snapshots/<snapshot>``.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.CreateTableFromSnapshotRequest)
  ))
_sym_db.RegisterMessage(CreateTableFromSnapshotRequest)

DropRowRangeRequest = _reflection.GeneratedProtocolMessageType('DropRowRangeRequest', (_message.Message,), dict(
  DESCRIPTOR = _DROPROWRANGEREQUEST,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Request message for
  [google.bigtable.admin.v2.BigtableTableAdmin.DropRowRange][google.bigtable.admin.v2.BigtableTableAdmin.DropRowRange]
  
  
  Attributes:
      name:
          The unique name of the table on which to drop a range of rows.
          Values are of the form
          ``projects/<project>/instances/<instance>/tables/<table>``.
      target:
          Delete all rows or by prefix.
      row_key_prefix:
          Delete all rows that start with this row key prefix. Prefix
          cannot be zero length.
      delete_all_data_from_table:
          Delete all rows in the table. Setting this to false is a no-
          op.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.DropRowRangeRequest)
  ))
_sym_db.RegisterMessage(DropRowRangeRequest)

ListTablesRequest = _reflection.GeneratedProtocolMessageType('ListTablesRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTTABLESREQUEST,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Request message for
  [google.bigtable.admin.v2.BigtableTableAdmin.ListTables][google.bigtable.admin.v2.BigtableTableAdmin.ListTables]
  
  
  Attributes:
      parent:
          The unique name of the instance for which tables should be
          listed. Values are of the form
          ``projects/<project>/instances/<instance>``.
      view:
          The view to be applied to the returned tables' fields.
          Defaults to ``NAME_ONLY`` if unspecified; no others are
          currently supported.
      page_size:
          Maximum number of results per page. CURRENTLY UNIMPLEMENTED
          AND IGNORED.
      page_token:
          The value of ``next_page_token`` returned by a previous call.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ListTablesRequest)
  ))
_sym_db.RegisterMessage(ListTablesRequest)

ListTablesResponse = _reflection.GeneratedProtocolMessageType('ListTablesResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTTABLESRESPONSE,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Response message for
  [google.bigtable.admin.v2.BigtableTableAdmin.ListTables][google.bigtable.admin.v2.BigtableTableAdmin.ListTables]
  
  
  Attributes:
      tables:
          The tables present in the requested instance.
      next_page_token:
          Set if not all tables could be returned in a single response.
          Pass this value to ``page_token`` in another request to get
          the next page of results.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ListTablesResponse)
  ))
_sym_db.RegisterMessage(ListTablesResponse)

GetTableRequest = _reflection.GeneratedProtocolMessageType('GetTableRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETTABLEREQUEST,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Request message for
  [google.bigtable.admin.v2.BigtableTableAdmin.GetTable][google.bigtable.admin.v2.BigtableTableAdmin.GetTable]
  
  
  Attributes:
      name:
          The unique name of the requested table. Values are of the form
          ``projects/<project>/instances/<instance>/tables/<table>``.
      view:
          The view to be applied to the returned table's fields.
          Defaults to ``SCHEMA_VIEW`` if unspecified.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.GetTableRequest)
  ))
_sym_db.RegisterMessage(GetTableRequest)

DeleteTableRequest = _reflection.GeneratedProtocolMessageType('DeleteTableRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETETABLEREQUEST,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Request message for
  [google.bigtable.admin.v2.BigtableTableAdmin.DeleteTable][google.bigtable.admin.v2.BigtableTableAdmin.DeleteTable]
  
  
  Attributes:
      name:
          The unique name of the table to be deleted. Values are of the
          form
          ``projects/<project>/instances/<instance>/tables/<table>``.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.DeleteTableRequest)
  ))
_sym_db.RegisterMessage(DeleteTableRequest)

ModifyColumnFamiliesRequest = _reflection.GeneratedProtocolMessageType('ModifyColumnFamiliesRequest', (_message.Message,), dict(

  Modification = _reflection.GeneratedProtocolMessageType('Modification', (_message.Message,), dict(
    DESCRIPTOR = _MODIFYCOLUMNFAMILIESREQUEST_MODIFICATION,
    __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
    ,
    __doc__ = """A create, update, or delete of a particular column family.
    
    
    Attributes:
        id:
            The ID of the column family to be modified.
        mod:
            Column familiy modifications.
        create:
            Create a new column family with the specified schema, or fail
            if one already exists with the given ID.
        update:
            Update an existing column family to the specified schema, or
            fail if no column family exists with the given ID.
        drop:
            Drop (delete) the column family with the given ID, or fail if
            no such family exists.
    """,
    # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ModifyColumnFamiliesRequest.Modification)
    ))
  ,
  DESCRIPTOR = _MODIFYCOLUMNFAMILIESREQUEST,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Request message for
  [google.bigtable.admin.v2.BigtableTableAdmin.ModifyColumnFamilies][google.bigtable.admin.v2.BigtableTableAdmin.ModifyColumnFamilies]
  
  
  Attributes:
      name:
          The unique name of the table whose families should be
          modified. Values are of the form
          ``projects/<project>/instances/<instance>/tables/<table>``.
      modifications:
          Modifications to be atomically applied to the specified
          table's families. Entries are applied in order, meaning that
          earlier modifications can be masked by later ones (in the case
          of repeated updates to the same family, for example).
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ModifyColumnFamiliesRequest)
  ))
_sym_db.RegisterMessage(ModifyColumnFamiliesRequest)
_sym_db.RegisterMessage(ModifyColumnFamiliesRequest.Modification)

GenerateConsistencyTokenRequest = _reflection.GeneratedProtocolMessageType('GenerateConsistencyTokenRequest', (_message.Message,), dict(
  DESCRIPTOR = _GENERATECONSISTENCYTOKENREQUEST,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Request message for
  [google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken][google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken]
  
  
  Attributes:
      name:
          The unique name of the Table for which to create a consistency
          token. Values are of the form
          ``projects/<project>/instances/<instance>/tables/<table>``.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.GenerateConsistencyTokenRequest)
  ))
_sym_db.RegisterMessage(GenerateConsistencyTokenRequest)

GenerateConsistencyTokenResponse = _reflection.GeneratedProtocolMessageType('GenerateConsistencyTokenResponse', (_message.Message,), dict(
  DESCRIPTOR = _GENERATECONSISTENCYTOKENRESPONSE,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Response message for
  [google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken][google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken]
  
  
  Attributes:
      consistency_token:
          The generated consistency token.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.GenerateConsistencyTokenResponse)
  ))
_sym_db.RegisterMessage(GenerateConsistencyTokenResponse)

CheckConsistencyRequest = _reflection.GeneratedProtocolMessageType('CheckConsistencyRequest', (_message.Message,), dict(
  DESCRIPTOR = _CHECKCONSISTENCYREQUEST,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Request message for
  [google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency][google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency]
  
  
  Attributes:
      name:
          The unique name of the Table for which to check replication
          consistency. Values are of the form
          ``projects/<project>/instances/<instance>/tables/<table>``.
      consistency_token:
          The token created using GenerateConsistencyToken for the
          Table.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.CheckConsistencyRequest)
  ))
_sym_db.RegisterMessage(CheckConsistencyRequest)

CheckConsistencyResponse = _reflection.GeneratedProtocolMessageType('CheckConsistencyResponse', (_message.Message,), dict(
  DESCRIPTOR = _CHECKCONSISTENCYRESPONSE,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Response message for
  [google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency][google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency]
  
  
  Attributes:
      consistent:
          True only if the token is consistent. A token is consistent if
          replication has caught up with the restrictions specified in
          the request.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.CheckConsistencyResponse)
  ))
_sym_db.RegisterMessage(CheckConsistencyResponse)

SnapshotTableRequest = _reflection.GeneratedProtocolMessageType('SnapshotTableRequest', (_message.Message,), dict(
  DESCRIPTOR = _SNAPSHOTTABLEREQUEST,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Request message for
  [google.bigtable.admin.v2.BigtableTableAdmin.SnapshotTable][google.bigtable.admin.v2.BigtableTableAdmin.SnapshotTable]
  
  Note: This is a private alpha release of Cloud Bigtable snapshots. This
  feature is not currently available to most Cloud Bigtable customers.
  This feature might be changed in backward-incompatible ways and is not
  recommended for production use. It is not subject to any SLA or
  deprecation policy.
  
  
  Attributes:
      name:
          The unique name of the table to have the snapshot taken.
          Values are of the form
          ``projects/<project>/instances/<instance>/tables/<table>``.
      cluster:
          The name of the cluster where the snapshot will be created in.
          Values are of the form ``projects/<project>/instances/<instanc
          e>/clusters/<cluster>``.
      snapshot_id:
          The ID by which the new snapshot should be referred to within
          the parent cluster, e.g., ``mysnapshot`` of the form: ``[_a-
          zA-Z0-9][-_.a-zA-Z0-9]*`` rather than ``projects/<project>/ins
          tances/<instance>/clusters/<cluster>/snapshots/mysnapshot``.
      ttl:
          The amount of time that the new snapshot can stay active after
          it is created. Once 'ttl' expires, the snapshot will get
          deleted. The maximum amount of time a snapshot can stay active
          is 7 days. If 'ttl' is not specified, the default value of 24
          hours will be used.
      description:
          Description of the snapshot.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.SnapshotTableRequest)
  ))
_sym_db.RegisterMessage(SnapshotTableRequest)

GetSnapshotRequest = _reflection.GeneratedProtocolMessageType('GetSnapshotRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETSNAPSHOTREQUEST,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Request message for
  [google.bigtable.admin.v2.BigtableTableAdmin.GetSnapshot][google.bigtable.admin.v2.BigtableTableAdmin.GetSnapshot]
  
  Note: This is a private alpha release of Cloud Bigtable snapshots. This
  feature is not currently available to most Cloud Bigtable customers.
  This feature might be changed in backward-incompatible ways and is not
  recommended for production use. It is not subject to any SLA or
  deprecation policy.
  
  
  Attributes:
      name:
          The unique name of the requested snapshot. Values are of the
          form ``projects/<project>/instances/<instance>/clusters/<clust
          er>/snapshots/<snapshot>``.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.GetSnapshotRequest)
  ))
_sym_db.RegisterMessage(GetSnapshotRequest)

ListSnapshotsRequest = _reflection.GeneratedProtocolMessageType('ListSnapshotsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTSNAPSHOTSREQUEST,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Request message for
  [google.bigtable.admin.v2.BigtableTableAdmin.ListSnapshots][google.bigtable.admin.v2.BigtableTableAdmin.ListSnapshots]
  
  Note: This is a private alpha release of Cloud Bigtable snapshots. This
  feature is not currently available to most Cloud Bigtable customers.
  This feature might be changed in backward-incompatible ways and is not
  recommended for production use. It is not subject to any SLA or
  deprecation policy.
  
  
  Attributes:
      parent:
          The unique name of the cluster for which snapshots should be
          listed. Values are of the form ``projects/<project>/instances/
          <instance>/clusters/<cluster>``. Use ``<cluster> = '-'`` to
          list snapshots for all clusters in an instance, e.g.,
          ``projects/<project>/instances/<instance>/clusters/-``.
      page_size:
          The maximum number of snapshots to return per page. CURRENTLY
          UNIMPLEMENTED AND IGNORED.
      page_token:
          The value of ``next_page_token`` returned by a previous call.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ListSnapshotsRequest)
  ))
_sym_db.RegisterMessage(ListSnapshotsRequest)

ListSnapshotsResponse = _reflection.GeneratedProtocolMessageType('ListSnapshotsResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTSNAPSHOTSRESPONSE,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Response message for
  [google.bigtable.admin.v2.BigtableTableAdmin.ListSnapshots][google.bigtable.admin.v2.BigtableTableAdmin.ListSnapshots]
  
  Note: This is a private alpha release of Cloud Bigtable snapshots. This
  feature is not currently available to most Cloud Bigtable customers.
  This feature might be changed in backward-incompatible ways and is not
  recommended for production use. It is not subject to any SLA or
  deprecation policy.
  
  
  Attributes:
      snapshots:
          The snapshots present in the requested cluster.
      next_page_token:
          Set if not all snapshots could be returned in a single
          response. Pass this value to ``page_token`` in another request
          to get the next page of results.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.ListSnapshotsResponse)
  ))
_sym_db.RegisterMessage(ListSnapshotsResponse)

DeleteSnapshotRequest = _reflection.GeneratedProtocolMessageType('DeleteSnapshotRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETESNAPSHOTREQUEST,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """Request message for
  [google.bigtable.admin.v2.BigtableTableAdmin.DeleteSnapshot][google.bigtable.admin.v2.BigtableTableAdmin.DeleteSnapshot]
  
  Note: This is a private alpha release of Cloud Bigtable snapshots. This
  feature is not currently available to most Cloud Bigtable customers.
  This feature might be changed in backward-incompatible ways and is not
  recommended for production use. It is not subject to any SLA or
  deprecation policy.
  
  
  Attributes:
      name:
          The unique name of the snapshot to be deleted. Values are of
          the form ``projects/<project>/instances/<instance>/clusters/<c
          luster>/snapshots/<snapshot>``.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.DeleteSnapshotRequest)
  ))
_sym_db.RegisterMessage(DeleteSnapshotRequest)

SnapshotTableMetadata = _reflection.GeneratedProtocolMessageType('SnapshotTableMetadata', (_message.Message,), dict(
  DESCRIPTOR = _SNAPSHOTTABLEMETADATA,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """The metadata for the Operation returned by SnapshotTable.
  
  Note: This is a private alpha release of Cloud Bigtable snapshots. This
  feature is not currently available to most Cloud Bigtable customers.
  This feature might be changed in backward-incompatible ways and is not
  recommended for production use. It is not subject to any SLA or
  deprecation policy.
  
  
  Attributes:
      original_request:
          The request that prompted the initiation of this SnapshotTable
          operation.
      request_time:
          The time at which the original request was received.
      finish_time:
          The time at which the operation failed or was completed
          successfully.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.SnapshotTableMetadata)
  ))
_sym_db.RegisterMessage(SnapshotTableMetadata)

CreateTableFromSnapshotMetadata = _reflection.GeneratedProtocolMessageType('CreateTableFromSnapshotMetadata', (_message.Message,), dict(
  DESCRIPTOR = _CREATETABLEFROMSNAPSHOTMETADATA,
  __module__ = 'google.cloud.bigtable.admin_v2.proto.bigtable_table_admin_pb2'
  ,
  __doc__ = """The metadata for the Operation returned by CreateTableFromSnapshot.
  
  Note: This is a private alpha release of Cloud Bigtable snapshots. This
  feature is not currently available to most Cloud Bigtable customers.
  This feature might be changed in backward-incompatible ways and is not
  recommended for production use. It is not subject to any SLA or
  deprecation policy.
  
  
  Attributes:
      original_request:
          The request that prompted the initiation of this
          CreateTableFromSnapshot operation.
      request_time:
          The time at which the original request was received.
      finish_time:
          The time at which the operation failed or was completed
          successfully.
  """,
  # @@protoc_insertion_point(class_scope:google.bigtable.admin.v2.CreateTableFromSnapshotMetadata)
  ))
_sym_db.RegisterMessage(CreateTableFromSnapshotMetadata)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n\034com.google.bigtable.admin.v2B\027BigtableTableAdminProtoP\001Z=google.golang.org/genproto/googleapis/bigtable/admin/v2;admin\252\002\036Google.Cloud.Bigtable.Admin.V2\312\002\036Google\\Cloud\\Bigtable\\Admin\\V2'))

_BIGTABLETABLEADMIN = _descriptor.ServiceDescriptor(
  name='BigtableTableAdmin',
  full_name='google.bigtable.admin.v2.BigtableTableAdmin',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=2405,
  serialized_end=4636,
  methods=[
  _descriptor.MethodDescriptor(
    name='CreateTable',
    full_name='google.bigtable.admin.v2.BigtableTableAdmin.CreateTable',
    index=0,
    containing_service=None,
    input_type=_CREATETABLEREQUEST,
    output_type=google_dot_cloud_dot_bigtable_dot_admin__v2_dot_proto_dot_table__pb2._TABLE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002/\"*/v2/{parent=projects/*/instances/*}/tables:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='CreateTableFromSnapshot',
    full_name='google.bigtable.admin.v2.BigtableTableAdmin.CreateTableFromSnapshot',
    index=1,
    containing_service=None,
    input_type=_CREATETABLEFROMSNAPSHOTREQUEST,
    output_type=google_dot_longrunning_dot_operations__pb2._OPERATION,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002B\"=/v2/{parent=projects/*/instances/*}/tables:createFromSnapshot:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='ListTables',
    full_name='google.bigtable.admin.v2.BigtableTableAdmin.ListTables',
    index=2,
    containing_service=None,
    input_type=_LISTTABLESREQUEST,
    output_type=_LISTTABLESRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002,\022*/v2/{parent=projects/*/instances/*}/tables')),
  ),
  _descriptor.MethodDescriptor(
    name='GetTable',
    full_name='google.bigtable.admin.v2.BigtableTableAdmin.GetTable',
    index=3,
    containing_service=None,
    input_type=_GETTABLEREQUEST,
    output_type=google_dot_cloud_dot_bigtable_dot_admin__v2_dot_proto_dot_table__pb2._TABLE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002,\022*/v2/{name=projects/*/instances/*/tables/*}')),
  ),
  _descriptor.MethodDescriptor(
    name='DeleteTable',
    full_name='google.bigtable.admin.v2.BigtableTableAdmin.DeleteTable',
    index=4,
    containing_service=None,
    input_type=_DELETETABLEREQUEST,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002,**/v2/{name=projects/*/instances/*/tables/*}')),
  ),
  _descriptor.MethodDescriptor(
    name='ModifyColumnFamilies',
    full_name='google.bigtable.admin.v2.BigtableTableAdmin.ModifyColumnFamilies',
    index=5,
    containing_service=None,
    input_type=_MODIFYCOLUMNFAMILIESREQUEST,
    output_type=google_dot_cloud_dot_bigtable_dot_admin__v2_dot_proto_dot_table__pb2._TABLE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002D\"?/v2/{name=projects/*/instances/*/tables/*}:modifyColumnFamilies:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='DropRowRange',
    full_name='google.bigtable.admin.v2.BigtableTableAdmin.DropRowRange',
    index=6,
    containing_service=None,
    input_type=_DROPROWRANGEREQUEST,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002<\"7/v2/{name=projects/*/instances/*/tables/*}:dropRowRange:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='GenerateConsistencyToken',
    full_name='google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken',
    index=7,
    containing_service=None,
    input_type=_GENERATECONSISTENCYTOKENREQUEST,
    output_type=_GENERATECONSISTENCYTOKENRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002H\"C/v2/{name=projects/*/instances/*/tables/*}:generateConsistencyToken:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='CheckConsistency',
    full_name='google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency',
    index=8,
    containing_service=None,
    input_type=_CHECKCONSISTENCYREQUEST,
    output_type=_CHECKCONSISTENCYRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002@\";/v2/{name=projects/*/instances/*/tables/*}:checkConsistency:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='SnapshotTable',
    full_name='google.bigtable.admin.v2.BigtableTableAdmin.SnapshotTable',
    index=9,
    containing_service=None,
    input_type=_SNAPSHOTTABLEREQUEST,
    output_type=google_dot_longrunning_dot_operations__pb2._OPERATION,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\0028\"3/v2/{name=projects/*/instances/*/tables/*}:snapshot:\001*')),
  ),
  _descriptor.MethodDescriptor(
    name='GetSnapshot',
    full_name='google.bigtable.admin.v2.BigtableTableAdmin.GetSnapshot',
    index=10,
    containing_service=None,
    input_type=_GETSNAPSHOTREQUEST,
    output_type=google_dot_cloud_dot_bigtable_dot_admin__v2_dot_proto_dot_table__pb2._SNAPSHOT,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002:\0228/v2/{name=projects/*/instances/*/clusters/*/snapshots/*}')),
  ),
  _descriptor.MethodDescriptor(
    name='ListSnapshots',
    full_name='google.bigtable.admin.v2.BigtableTableAdmin.ListSnapshots',
    index=11,
    containing_service=None,
    input_type=_LISTSNAPSHOTSREQUEST,
    output_type=_LISTSNAPSHOTSRESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002:\0228/v2/{parent=projects/*/instances/*/clusters/*}/snapshots')),
  ),
  _descriptor.MethodDescriptor(
    name='DeleteSnapshot',
    full_name='google.bigtable.admin.v2.BigtableTableAdmin.DeleteSnapshot',
    index=12,
    containing_service=None,
    input_type=_DELETESNAPSHOTREQUEST,
    output_type=google_dot_protobuf_dot_empty__pb2._EMPTY,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\323\344\223\002:*8/v2/{name=projects/*/instances/*/clusters/*/snapshots/*}')),
  ),
])
_sym_db.RegisterServiceDescriptor(_BIGTABLETABLEADMIN)

DESCRIPTOR.services_by_name['BigtableTableAdmin'] = _BIGTABLETABLEADMIN

# @@protoc_insertion_point(module_scope)
